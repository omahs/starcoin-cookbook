"use strict";(self.webpackChunkstarcoin_cookbook=self.webpackChunkstarcoin_cookbook||[]).push([[1024],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return p}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),d=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=d(n),p=r,m=f["".concat(i,".").concat(p)]||f[p]||u[p]||o;return n?a.createElement(m,c(c({ref:t},s),{},{components:n})):a.createElement(m,c({ref:t},s))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var d=2;d<o;d++)c[d]=n[d];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7062:function(e,t,n){n.r(t),n.d(t,{assets:function(){return i},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return d}});var a=n(3117),r=(n(7294),n(3905));const o={},c="How to call a function",l={unversionedId:"move/call-function",id:"move/call-function",title:"How to call a function",description:"In the Quick Start tutorial, we experimented with how to call script functions. So how to call ordinary functions?",source:"@site/docs/03-move/12-call-function.md",sourceDirName:"03-move",slug:"/move/call-function",permalink:"/docs/move/call-function",draft:!1,editUrl:"https://github.com/starcoinorg/starcoin-cookbook/edit/main/docs/03-move/12-call-function.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"For solidity developer",permalink:"/docs/move/for-solidity-developer"},next:{title:"README",permalink:"/docs/move/move-vm/"}},i={},d=[{value:"Program source code",id:"program-source-code",level:2},{value:"Compile and deploy the contract",id:"compile-and-deploy-the-contract",level:2},{value:"Call function",id:"call-function",level:2},{value:"Call functions via RPC",id:"call-functions-via-rpc",level:2},{value:"Summary",id:"summary",level:2}],s={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-call-a-function"},"How to call a function"),(0,r.kt)("p",null,"In the ",(0,r.kt)("a",{parentName:"p",href:"/docs/move/quick-start"},"Quick Start")," tutorial, we experimented with how to call script functions. So how to call ordinary functions?"),(0,r.kt)("p",null,"Next, a small example will show how to call ordinary functions."),(0,r.kt)("h2",{id:"program-source-code"},"Program source code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-move"},'module MyAddr::EthSigVerifier {\n   use StarcoinFramework::Signature;\n   use StarcoinFramework::EVMAddress::{Self, EVMAddress};\n   use StarcoinFramework::Option::{Self, Option};\n\n\n   public fun verify_eth_sig(signature: vector<u8>, addr: vector<u8>, message: vector<u8>) : bool{\n      let receover_address_opt:Option<EVMAddress>  = Signature::ecrecover(message, signature);\n      let expect_address =  EVMAddress::new(addr);\n      &Option::destroy_some<EVMAddress>(receover_address_opt) == &expect_address\n   }\n\n   #[test]\n   public fun verify_eth_sig_test(){\n      let signature = x"90a938f7457df6e8f741264c32697fc52f9a8f867c52dd70713d9d2d472f2e415d9c94148991bbe1f4a1818d1dff09165782749c877f5cf1eff4ef126e55714d1c";\n      let msg_hash = x"b453bd4e271eed985cbab8231da609c4ce0a9cf1f763b6c1594e76315510e0f1";\n      let address_bytes = x"29c76e6ad8f28bb1004902578fb108c507be341b";\n      assert!(verify_eth_sig(signature, address_bytes, msg_hash), 101);\n   }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="test/Move.toml" {7}',title:'"test/Move.toml"',"{7}":!0},'[package]\nname = "did"\nversion = "0.0.1"\n\n[addresses]\nStarcoinFramework = "0x1"\nMyAddr = "0x68a0e9bab71d6493456432a676a4a915"\n\n[dependencies]\nStarcoinFramework = {git = "https://github.com/starcoinorg/starcoin-framework.git", rev="cf1deda180af40a8b3e26c0c7b548c4c290cd7e7"}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note that replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"MyAddr")," field with the address where you actually deployed the contract.")),(0,r.kt)("h2",{id:"compile-and-deploy-the-contract"},"Compile and deploy the contract"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Packaging modules")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ mpm release\n\nPackaging Modules:\n         0x68a0e9bab71d6493456432a676a4a915::EthSigVerifier\nRelease done: release/test.v0.0.0.blob, package hash: 0x7cf72e1b608844086ad90bd703173fafe0bdc917d8374c078fbd4408a4074312\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Unlock account")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"starcoin% account unlock 0x68a0e9bab71d6493456432a676a4a915 -p <MY-PASSWORD>\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Deploy the module in the Starcoin console")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'starcoin% dev deploy /home/ubuntu/i/m-pra/test/release/test.v0.0.0.blob -s 0x68a0e9bab71d6493456432a676a4a915 -b\n\ntxn 0xfd4775eaecd962dcfa3197bd5ba954226243fdf97a112116630c58935ea970e1 submitted.\n{\n  "ok": {\n    "dry_run_output": {\n      "events": [],\n      "explained_status": "Executed",\n      "gas_used": "7800",\n      "status": "Executed",\n      "write_set": [\n        {\n......\n')),(0,r.kt)("h2",{id:"call-function"},"Call function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'starcoin% dev call --function 0x68a0e9bab71d6493456432a676a4a915::EthSigVerifier::verify_eth_sig --arg x"90a938f7457df6e8f741264c32697fc52f9a8f867c52dd70713d9d2d472f2e415d9c94148991bbe1f4a1818d1dff09165782749c877f5cf1eff4ef126e55714d1c" --arg x"29c76e6ad8f28bb1004902578fb108c507be341b" --arg x"b453bd4e271eed985cbab8231da609c4ce0a9cf1f763b6c1594e76315510e0f1"\n\n{\n  "ok": [\n    true\n  ]\n}\n')),(0,r.kt)("h2",{id:"call-functions-via-rpc"},"Call functions via RPC"),(0,r.kt)("p",null,"After publishing to the chain, we can call it through the API interface or SDK."),(0,r.kt)("p",null,"Use the curl command to call the function remotely:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'$ curl \'http://localhost:9850/\' -H \'content-type: application/json\' --data-raw \'{"jsonrpc":"2.0","method":"contract.call_v2","params":[{"function_id":"0x68a0e9bab71d6493456432a676a4a915::EthSigVerifier::verify_eth_sig","args":["x\\"90a938f7457df6e8f741264c32697fc52f9a8f867c52dd70713d9d2d472f2e415d9c94148991bbe1f4a1818d1dff09165782749c877f5cf1eff4ef126e55714d1c\\"","x\\"29c76e6ad8f28bb1004902578fb108c507be341b\\"","x\\"b453bd4e271eed985cbab8231da609c4ce0a9cf1f763b6c1594e76315510e0f1\\""],"type_args":[]}],"id":0}\'\n\n{"jsonrpc":"2.0","result":[true],"id":0}\n')),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"The Starcoin console command used to call a normal function is ",(0,r.kt)("inlineCode",{parentName:"p"},"dev call --function"),", and the Starcoin console command to call a script function is ",(0,r.kt)("inlineCode",{parentName:"p"},"account execute-function --function"),"."))}u.isMDXComponent=!0}}]);