"use strict";(self.webpackChunkstarcoin_cookbook=self.webpackChunkstarcoin_cookbook||[]).push([[8553],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||i;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2989:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return c}});var a=n(3117),r=(n(7294),n(3905));const i={},s="StatMask javascript sdk",o={unversionedId:"web3/starmask/rpc-api",id:"web3/starmask/rpc-api",title:"StatMask javascript sdk",description:"StarMask uses the starcoin.request(args) method to wrap an RPC API.",source:"@site/docs/04-web3/01-starmask/03-rpc-api.md",sourceDirName:"04-web3/01-starmask",slug:"/web3/starmask/rpc-api",permalink:"/docs/web3/starmask/rpc-api",draft:!1,editUrl:"https://github.com/starcoinorg/starcoin-cookbook/edit/main/docs/04-web3/01-starmask/03-rpc-api.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Starcoin Provider API",permalink:"/docs/web3/starmask/starcoin-provider"},next:{title:"Starcoin Json RPC",permalink:"/docs/web3/starcoin-json-rpc"}},l={},c=[{value:"Restricted Methods",id:"restricted-methods",level:2},{value:"<code>stc_requestAccounts</code>",id:"stc_requestaccounts",level:3},{value:"Returns",id:"returns",level:4},{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"<code>wallet_getPermissions</code>",id:"wallet_getpermissions",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Description",id:"description-1",level:4},{value:"<code>wallet_requestPermissions</code>",id:"wallet_requestpermissions",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Example",id:"example-1",level:4},{value:"Unrestricted Methods",id:"unrestricted-methods",level:2},{value:"<code>stc_decrypt</code>",id:"stc_decrypt",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Example",id:"example-2",level:4},{value:"<code>stc_getEncryptionPublicKey</code>",id:"stc_getencryptionpublickey",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Example",id:"example-3",level:4},{value:"Encrypting",id:"encrypting",level:4},{value:"<code>wallet_addStarcoinChain</code>",id:"wallet_addstarcoinchain",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Usage with <code>wallet_switchStarcoinChain</code>",id:"usage-with-wallet_switchstarcoinchain",level:4},{value:"<code>wallet_switchStarcoinChain</code>",id:"wallet_switchstarcoinchain",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Description",id:"description-6",level:4},{value:"<code>wallet_registerOnboarding</code>",id:"wallet_registeronboarding",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Description",id:"description-7",level:4},{value:"<code>wallet_watchAsset</code>",id:"wallet_watchasset",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Description",id:"description-8",level:4},{value:"Example",id:"example-4",level:4},{value:"Mobile Specific RPC Methods",id:"mobile-specific-rpc-methods",level:2},{value:"<code>wallet_scanQRCode</code>",id:"wallet_scanqrcode",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Description",id:"description-9",level:4},{value:"Example",id:"example-5",level:4}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"statmask-javascript-sdk"},"StatMask javascript sdk"),(0,r.kt)("p",null,"StarMask uses the ",(0,r.kt)("a",{parentName:"p",href:"/docs/web3/starmask/starcoin-provider#starcoin-request-args"},(0,r.kt)("inlineCode",{parentName:"a"},"starcoin.request(args)")," method")," to wrap an RPC API."),(0,r.kt)("p",null,"The API is based on an interface exposed by all Starcoin clients, along with a growing number of methods that may or may not be supported by other wallets."),(0,r.kt)("admonition",{title:"Tip",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"All RPC method requests can return errors.\nMake sure to handle errors for every call to ",(0,r.kt)("inlineCode",{parentName:"p"},"starcoin.request(args)"),".")),(0,r.kt)("admonition",{title:"Try",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Starcoin Methods, please visit our ",(0,r.kt)("a",{parentName:"p",href:"https://starcoinorg.github.io/starcoin-cookbook/docs/reference/json-rpc/"},"Starcoin JSON RPC API Documents")," or ",(0,r.kt)("a",{parentName:"p",href:"https://starcoin.org/en/developers/dapp/rpc/rpc_document/"},"API Playground"),".")),(0,r.kt)("h2",{id:"restricted-methods"},"Restricted Methods"),(0,r.kt)("p",null,"StarMask introduced Web3 Wallet Permissions via ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2255"},"EIP-2255"),".\nIn this permissions system, each RPC method is either ",(0,r.kt)("em",{parentName:"p"},"restricted")," or ",(0,r.kt)("em",{parentName:"p"},"unrestricted"),".\nIf a method is restricted, the caller must have the corresponding permission in order to call it.\nUnrestricted methods, meanwhile, have no corresponding permission. Some of them still rely upon permissions to succeed though (e.g. the signing methods require that you have the ",(0,r.kt)("inlineCode",{parentName:"p"},"stc_accounts")," permission for the signer account), and some require confirmation by the user (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"wallet_addStarcoinChain"),")."),(0,r.kt)("p",null,"More permissions will be added in the future."),(0,r.kt)("p",null,"Under the hood, permissions are plain, JSON-compatible objects, with a number of fields that are mostly used internally by StarMask.\nThe following interface lists the fields that may be of interest to consumers:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Web3WalletPermission {\n  // The name of the method corresponding to the permission\n  parentCapability: string;\n\n  // The date the permission was granted, in UNIX epoch time\n  date?: number;\n}\n")),(0,r.kt)("p",null,"If you're interested in learning more about the theory behind this ",(0,r.kt)("em",{parentName:"p"},"capability"),"-inspired permissions system, we encourage you to take a look at ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2255"},"EIP-2255"),"."),(0,r.kt)("h3",{id:"stc_requestaccounts"},(0,r.kt)("inlineCode",{parentName:"h3"},"stc_requestAccounts")),(0,r.kt)("admonition",{title:"EIP-1102",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This method is specified by ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1102"},"EIP-1102"),"."),(0,r.kt)("p",{parentName:"admonition"},"Under the hood, it calls ",(0,r.kt)("a",{parentName:"p",href:"#wallet-requestpermissions"},(0,r.kt)("inlineCode",{parentName:"a"},"wallet_requestPermissions"))," for the ",(0,r.kt)("inlineCode",{parentName:"p"},"stc_accounts")," permission.\nSince ",(0,r.kt)("inlineCode",{parentName:"p"},"stc_accounts")," is currently the only permission, this method is all you need for now.")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string[]")," - An array of a single, hexadecimal Starcoin address string."),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"Requests that the user provides an Starcoin address to be identified by.\nReturns a Promise that resolves to an array of a single Starcoin address string.\nIf the user denies the request, the Promise will reject with a ",(0,r.kt)("inlineCode",{parentName:"p"},"4001")," error."),(0,r.kt)("p",null,"The request causes a StarMask popup to appear.\nYou should only request the user's accounts in response to user action, such as a button click.\nYou should always disable the button that caused the request to be dispatched, while the request is still pending."),(0,r.kt)("p",null,"If you can't retrieve the user's account(s), you should encourage the user to initiate an account request."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'document.getElementById("connectButton", connect);\n\nfunction connect() {\n  starcoin\n    .request({ method: "stc_requestAccounts" })\n    .then(handleAccountsChanged)\n    .catch((error) => {\n      if (error.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        console.log("Please connect to StarMask.");\n      } else {\n        console.error(error);\n      }\n    });\n}\n')),(0,r.kt)("h3",{id:"wallet_getpermissions"},(0,r.kt)("inlineCode",{parentName:"h3"},"wallet_getPermissions")),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Web3WalletPermission[]")," - An array of the caller's permissions."),(0,r.kt)("h4",{id:"description-1"},"Description"),(0,r.kt)("p",null,"Gets the caller's current permissions.\nReturns a Promise that resolves to an array of ",(0,r.kt)("inlineCode",{parentName:"p"},"Web3WalletPermission")," objects.\nIf the caller has no permissions, the array will be empty."),(0,r.kt)("h3",{id:"wallet_requestpermissions"},(0,r.kt)("inlineCode",{parentName:"h3"},"wallet_requestPermissions")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array")),(0,r.kt)("ol",{parentName:"li",start:0},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestedPermissions")," - The requested permissions.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface RequestedPermissions {\n  [methodName: string]: {}; // an empty object, for future extensibility\n}\n")),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Web3WalletPermission[]")," - An array of the caller's permissions."),(0,r.kt)("h4",{id:"description-2"},"Description"),(0,r.kt)("p",null,"Requests the given permissions from the user.\nReturns a Promise that resolves to a non-empty array of ",(0,r.kt)("inlineCode",{parentName:"p"},"Web3WalletPermission")," objects, corresponding to the caller's current permissions.\nIf the user denies the request, the Promise will reject with a ",(0,r.kt)("inlineCode",{parentName:"p"},"4001")," error."),(0,r.kt)("p",null,"The request causes a StarMask popup to appear.\nYou should only request permissions in response to user action, such as a button click."),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'document.getElementById("requestPermissionsButton", requestPermissions);\n\nfunction requestPermissions() {\n  starcoin\n    .request({\n      method: "wallet_requestPermissions",\n      params: [{ stc_accounts: {} }],\n    })\n    .then((permissions) => {\n      const accountsPermission = permissions.find(\n        (permission) => permission.parentCapability === "stc_accounts"\n      );\n      if (accountsPermission) {\n        console.log("stc_accounts permission successfully requested!");\n      }\n    })\n    .catch((error) => {\n      if (error.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        console.log("Permissions needed to continue.");\n      } else {\n        console.error(error);\n      }\n    });\n}\n')),(0,r.kt)("h2",{id:"unrestricted-methods"},"Unrestricted Methods"),(0,r.kt)("h3",{id:"stc_decrypt"},(0,r.kt)("inlineCode",{parentName:"h3"},"stc_decrypt")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array")),(0,r.kt)("ol",{parentName:"li",start:0},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"string")," - An encrypted message."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"string")," - The address of the Starcoin account that can decrypt the message.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")," - The decrypted message."),(0,r.kt)("h4",{id:"description-3"},"Description"),(0,r.kt)("p",null,"Requests that StarMask decrypts the given encrypted message.\nThe message must have been encrypted using the public encryption key of the given Starcoin address.\nReturns a Promise that resolves to the decrypted message, or rejects if the decryption attempt fails."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#stc-getencryptionpublickey"},(0,r.kt)("inlineCode",{parentName:"a"},"stc_getEncryptionPublicKey"))," for more information."),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'starcoin\n  .request({\n    method: "stc_decrypt",\n    params: [encryptedMessage, accounts[0]],\n  })\n  .then((decryptedMessage) =>\n    console.log("The decrypted message is:", decryptedMessage)\n  )\n  .catch((error) => console.log(error.message));\n')),(0,r.kt)("h3",{id:"stc_getencryptionpublickey"},(0,r.kt)("inlineCode",{parentName:"h3"},"stc_getEncryptionPublicKey")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array")),(0,r.kt)("ol",{parentName:"li",start:0},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"string")," - The address of the Starcoin account whose encryption key should be retrieved.")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")," - The public encryption key of the specified Starcoin account."),(0,r.kt)("h4",{id:"description-4"},"Description"),(0,r.kt)("p",null,"Requests that the user shares their public encryption key.\nReturns a Promise that resolve to the public encryption key, or rejects if the user denied the request."),(0,r.kt)("p",null,"The public key is computed from entropy associated with the specified user account, using the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/dchest/tweetnacl-js"},(0,r.kt)("inlineCode",{parentName:"a"},"nacl"))," implementation of the ",(0,r.kt)("inlineCode",{parentName:"p"},"X25519_XSalsa20_Poly1305")," algorithm."),(0,r.kt)("h4",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'let encryptionPublicKey;\n\nstarcoin\n  .request({\n    method: "stc_getEncryptionPublicKey",\n    params: [accounts[0]], // you must have access to the specified account\n  })\n  .then((result) => {\n    encryptionPublicKey = result;\n  })\n  .catch((error) => {\n    if (error.code === 4001) {\n      // EIP-1193 userRejectedRequest error\n      console.log("We can\'t encrypt anything without the key.");\n    } else {\n      console.error(error);\n    }\n  });\n')),(0,r.kt)("h4",{id:"encrypting"},"Encrypting"),(0,r.kt)("p",null,"The point of the encryption key is of course to encrypt things."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const stcUtil = require("@starcoin/stc-util");\nconst sigUtil = require("@metamask/eth-sig-util");\n\nconst encryptedMessage = stcUtil.bufferToHex(\n  Buffer.from(\n    JSON.stringify(\n      sigUtil.encrypt({\n        publicKey: encryptionPublicKey,\n        data: "hello world!",\n        version: "x25519-xsalsa20-poly1305",\n      })\n    ),\n    "utf8"\n  )\n);\n')),(0,r.kt)("h3",{id:"wallet_addstarcoinchain"},(0,r.kt)("inlineCode",{parentName:"h3"},"wallet_addStarcoinChain")),(0,r.kt)("admonition",{title:"EIP-3085",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This method is specified by ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-3085"},"EIP-3085"),".")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array")),(0,r.kt)("ol",{parentName:"li",start:0},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"AddStarcoinChainParameter")," - Metadata about the chain that will be added to StarMask.")))),(0,r.kt)("p",null,"For the ",(0,r.kt)("inlineCode",{parentName:"p"},"rpcUrls")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"blockExplorerUrls")," arrays, at least one element is required, and only the first element will be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface AddStarcoinChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n  iconUrls?: string[]; // Currently ignored.\n}\n")),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"null")," - The method returns ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," if the request was successful, and an error otherwise."),(0,r.kt)("h4",{id:"description-5"},"Description"),(0,r.kt)("p",null,"Creates a confirmation asking the user to add the specified chain to StarMask.\nThe user may choose to switch to the chain once it has been added."),(0,r.kt)("p",null,"As with any method that causes a confirmation to appear, ",(0,r.kt)("inlineCode",{parentName:"p"},"wallet_addStarcoinChain"),"\nshould ",(0,r.kt)("strong",{parentName:"p"},"only")," be called as a result of direct user action, such as the click of a button."),(0,r.kt)("p",null,"StarMask stringently validates the parameters for this method, and will reject the request\nif any parameter is incorrectly formatted.\nIn addition, StarMask will automatically reject the request under the following circumstances:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the RPC endpoint doesn't respond to RPC calls."),(0,r.kt)("li",{parentName:"ul"},"If the RPC endpoint returns a different chain ID when ",(0,r.kt)("inlineCode",{parentName:"li"},"chain.id")," is called."),(0,r.kt)("li",{parentName:"ul"},"If the chain ID corresponds to any default StarMask chains.")),(0,r.kt)("p",null,"StarMask does not yet support chains with native currencies that do not have 18 decimals,\nbut may do so in the future."),(0,r.kt)("h4",{id:"usage-with-wallet_switchstarcoinchain"},"Usage with ",(0,r.kt)("inlineCode",{parentName:"h4"},"wallet_switchStarcoinChain")),(0,r.kt)("p",null,"We recommend using this method with ",(0,r.kt)("a",{parentName:"p",href:"#wallet-addStarcoinchain"},(0,r.kt)("inlineCode",{parentName:"a"},"wallet_addStarcoinChain")),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'try {\n  await starcoin.request({\n    method: "wallet_switchStarcoinChain",\n    params: [{ chainId: "0xf00" }],\n  });\n} catch (switchError) {\n  // This error code indicates that the chain has not been added to StarMask.\n  if (switchError.code === 4902) {\n    try {\n      await starcoin.request({\n        method: "wallet_addStarcoinChain",\n        params: [\n          {\n            chainId: "0xf00",\n            chainName: "...",\n            rpcUrls: ["https://..."] /* ... */,\n          },\n        ],\n      });\n    } catch (addError) {\n      // handle "add" error\n    }\n  }\n  // handle other "switch" errors\n}\n')),(0,r.kt)("h3",{id:"wallet_switchstarcoinchain"},(0,r.kt)("inlineCode",{parentName:"h3"},"wallet_switchStarcoinChain")),(0,r.kt)("admonition",{title:"EIP-3326",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This method is specified by ",(0,r.kt)("a",{parentName:"p",href:"https://ethereum-magicians.org/t/eip-3326-wallet-switchethereumchain"},"EIP-3326"),".")),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array")),(0,r.kt)("ol",{parentName:"li",start:0},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"SwitchStarcoinChainParameter")," - Metadata about the chain that StarMask will switch to.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface SwitchEthereumChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n}\n")),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"null")," - The method returns ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," if the request was successful, and an error otherwise."),(0,r.kt)("p",null,"If the error code (",(0,r.kt)("inlineCode",{parentName:"p"},"error.code"),") is ",(0,r.kt)("inlineCode",{parentName:"p"},"4902"),", then the requested chain has not been added by StarMask, and you have to request to add it via ",(0,r.kt)("a",{parentName:"p",href:"#wallet-addstarcoinchain"},(0,r.kt)("inlineCode",{parentName:"a"},"wallet_addStarcoinChain")),"."),(0,r.kt)("h4",{id:"description-6"},"Description"),(0,r.kt)("admonition",{title:"Tip",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"See ",(0,r.kt)("a",{parentName:"p",href:"#usage-with-wallet-switchstarcoinchain"},"above")," for how to use this method with ",(0,r.kt)("inlineCode",{parentName:"p"},"wallet_addStarcoinChain"),".")),(0,r.kt)("p",null,"Creates a confirmation asking the user to switch to the chain with the specified ",(0,r.kt)("inlineCode",{parentName:"p"},"chainId"),"."),(0,r.kt)("p",null,"As with any method that causes a confirmation to appear, ",(0,r.kt)("inlineCode",{parentName:"p"},"wallet_switchStarcoinChain"),"\nshould ",(0,r.kt)("strong",{parentName:"p"},"only")," be called as a result of direct user action, such as the click of a button."),(0,r.kt)("p",null,"StarMask will automatically reject the request under the following circumstances:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the chain ID is malformed"),(0,r.kt)("li",{parentName:"ul"},"If the chain with the specified chain ID has not been added to StarMask")),(0,r.kt)("h3",{id:"wallet_registeronboarding"},(0,r.kt)("inlineCode",{parentName:"h3"},"wallet_registerOnboarding")),(0,r.kt)("admonition",{title:"Tip",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"As an API consumer, you are unlikely to have to call this method yourself.\nPlease see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/web3/starmask/onboarding-library"},"Onboarding Library")," documentation for more information.")),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the request was successful, ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("h4",{id:"description-7"},"Description"),(0,r.kt)("p",null,"Registers the requesting site with StarMask as the initiator of onboarding.\nReturns a Promise that resolves to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", or rejects if there's an error."),(0,r.kt)("p",null,"This method is intended to be called after StarMask has been installed, but before the StarMask onboarding has completed.\nYou can use this method to inform StarMask that you were the one that suggested installing StarMask.\nThis lets StarMask redirect the user back to your site after onboarding has completed."),(0,r.kt)("p",null,"Instead of calling this method directly, you should use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/starcoinorg/starmask-onboarding"},(0,r.kt)("inlineCode",{parentName:"a"},"@starcoin/starmask-onboarding")," library"),"."),(0,r.kt)("h3",{id:"wallet_watchasset"},(0,r.kt)("inlineCode",{parentName:"h3"},"wallet_watchAsset")),(0,r.kt)("admonition",{title:"EIP-747",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This method is specified by ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-747"},"EIP-747"),".")),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"WatchAssetParams")," - The metadata of the asset to watch.")),(0,r.kt)("p",null,"<<< @/docs/snippets/WatchAssetParams.ts"),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the the token was added, ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("h4",{id:"description-8"},"Description"),(0,r.kt)("p",null,"Requests that the user tracks the token in StarMask.\nReturns a ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," indicating if the token was successfully added."),(0,r.kt)("p",null,"Most Starcoin wallets support some set of tokens, usually from a centrally curated registry of tokens.\n",(0,r.kt)("inlineCode",{parentName:"p"},"wallet_watchAsset")," enables web3 application developers to ask their users to track tokens in their wallets, at runtime.\nOnce added, the token is indistinguishable from those added via legacy methods, such as a centralized registry."),(0,r.kt)("h4",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'starcoin\n  .request({\n    method: "wallet_watchAsset",\n    params: {\n      type: "ERC20",\n      options: {\n        address: "0xb60e8dd61c5d32be8058bb8eb970870f07233155",\n        symbol: "FOO",\n        decimals: 18,\n        image: "https://foo.io/token-image.svg",\n      },\n    },\n  })\n  .then((success) => {\n    if (success) {\n      console.log("FOO successfully added to wallet!");\n    } else {\n      throw new Error("Something went wrong.");\n    }\n  })\n  .catch(console.error);\n')),(0,r.kt)("h2",{id:"mobile-specific-rpc-methods"},"Mobile Specific RPC Methods"),(0,r.kt)("h3",{id:"wallet_scanqrcode"},(0,r.kt)("inlineCode",{parentName:"h3"},"wallet_scanQRCode")),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array")),(0,r.kt)("ol",{parentName:"li",start:0},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"string")," - (optional) A regular expression for matching arbitrary QR code strings")))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")," - The string corresponding to the scanned QR code."),(0,r.kt)("h4",{id:"description-9"},"Description"),(0,r.kt)("p",null,"Requests that the user scans a QR code using their device camera.\nReturns a Promise that resolves to a string, matching either:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The regex parameter, if provided"),(0,r.kt)("li",{parentName:"ol"},"An starcoin address, if no regex parameter was provided")),(0,r.kt)("p",null,"If neither condition is met, the Promise will reject with an error."),(0,r.kt)("p",null,"StarMask previously introduced this feature per the proposed ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/issues/945"},"EIP-945"),".\nThe functionality was temporarily removed before being reintroduced as this RPC method."),(0,r.kt)("h4",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'starcoin\n  .request({\n    method: "wallet_scanQRCode",\n    // The regex string must be valid input to the RegExp constructor, if provided\n    params: ["\\\\D"],\n  })\n  .then((result) => {\n    console.log(result);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n')))}d.isMDXComponent=!0}}]);