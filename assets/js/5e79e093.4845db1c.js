"use strict";(self.webpackChunkstarcoin_cookbook=self.webpackChunkstarcoin_cookbook||[]).push([[8949],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3278:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return c}});var r=t(3117),o=(t(7294),t(3905));const a={},i="BCS in JS SDK",s={unversionedId:"web3/understanding-resource-and-bcs/bcs-in-js",id:"web3/understanding-resource-and-bcs/bcs-in-js",title:"BCS in JS SDK",description:"JS SDK Repo: starcoin.js",source:"@site/docs/04-web3/05-understanding-resource-and-bcs/02-bcs-in-js.md",sourceDirName:"04-web3/05-understanding-resource-and-bcs",slug:"/web3/understanding-resource-and-bcs/bcs-in-js",permalink:"/docs/web3/understanding-resource-and-bcs/bcs-in-js",draft:!1,editUrl:"https://github.com/starcoinorg/starcoin-cookbook/edit/main/docs/04-web3/05-understanding-resource-and-bcs/02-bcs-in-js.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Binary Canonical Serialization (BCS)",permalink:"/docs/web3/understanding-resource-and-bcs/bcs"},next:{title:"Interaction with the chain by RPC and SDK",permalink:"/docs/web3/interacting-with-the-chain"}},l={},c=[{value:"Type Inheritance Diagram",id:"type-inheritance-diagram",level:2},{value:"Examples",id:"examples",level:2},{value:"<code>Bytes</code>",id:"bytes",level:3},{value:"<code>string</code>",id:"string",level:3},{value:"<code>U64</code>",id:"u64",level:3},{value:"<code>U128</code>",id:"u128",level:3},{value:"<code>Bool</code>",id:"bool",level:3},{value:"<code>Vector&lt;U8&gt;</code>",id:"vectoru8",level:3},{value:"<code>Vector&lt;Vector&lt;U8&gt;&gt;</code>",id:"vectorvectoru8",level:3},{value:"<code>Vector&lt;U128&gt;</code>",id:"vectoru128",level:3}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bcs-in-js-sdk"},"BCS in JS SDK"),(0,o.kt)("p",null,"JS SDK Repo: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/starcoinorg/starcoin.js"},"starcoin.js")),(0,o.kt)("h2",{id:"type-inheritance-diagram"},"Type Inheritance Diagram"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"types"),(0,o.kt)("th",{parentName:"tr",align:null},"directory"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"js(client level)"),(0,o.kt)("td",{parentName:"tr",align:null},"src/types/index.ts")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"starcoin_types"),(0,o.kt)("td",{parentName:"tr",align:null},"src/lib/runtime/starcoin_types/index.ts")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"onchain_events"),(0,o.kt)("td",{parentName:"tr",align:null},"src/lib/runtime/onchain_events/index.ts")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"bcs"),(0,o.kt)("td",{parentName:"tr",align:null},"src/lib/runtime/bcs/index.ts")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"serde"),(0,o.kt)("td",{parentName:"tr",align:null},"src/lib/runtime/serde/index.ts")))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"bytes"},(0,o.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { bcs } from "@starcoin/starcoin";\n\nconst token = "0x00000000000000000000000000000001::STC::STC";\nconsole.log(token);\n/*\n0x00000000000000000000000000000001::STC::STC\n*/\nconst tokenUint8Array = new Uint8Array(Buffer.from(token));\nconsole.log(tokenUint8Array);\n/*\nUint8Array(44) [\n      48, 120, 48, 48, 48, 48, 48, 48, 48, 48,\n      48,  48, 48, 48, 48, 48, 48, 48, 48, 48,\n      48,  48, 48, 48, 48, 48, 48, 48, 48, 48,\n      48,  48, 48, 49, 58, 58, 83, 84, 67, 58,\n      58,  83, 84, 67\n    ]\n*/\nconsole.log(toHexString(tokenUint8Array));\n/*\n0x307830303030303030303030303030303030303030303030303030303030303030313a3a5354433a3a535443\n*/\nconst se = new BcsSerializer();\nse.serializeBytes(tokenUint8Array);\nconsole.log(se.getBytes());\n/*\nUint8Array(45) [\n      44, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48,\n      48, 48,  48, 48, 48, 48, 48, 48, 48, 48, 48,\n      48, 48,  48, 48, 48, 48, 48, 48, 48, 48, 48,\n      48, 49,  58, 58, 83, 84, 67, 58, 58, 83, 84,\n      67\n    ]\n*/\nconst tokenHex = toHexString(se.getBytes());\nconsole.log(tokenHex);\n/*\n0x2c307830303030303030303030303030303030303030303030303030303030303030313a3a5354433a3a535443\n*/\n')),(0,o.kt)("p",null,"the Uint8Array of ",(0,o.kt)("inlineCode",{parentName:"p"},"se.getBytes()")," has one element ",(0,o.kt)("inlineCode",{parentName:"p"},"44")," at first position more than the Uint8Array of ",(0,o.kt)("inlineCode",{parentName:"p"},"tokenUint8Array"),"(length=44), and the hex of ",(0,o.kt)("inlineCode",{parentName:"p"},"44")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"2c"),"."),(0,o.kt)("h3",{id:"string"},(0,o.kt)("inlineCode",{parentName:"h3"},"string")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { bcs } from "@starcoin/starcoin";\nimport { hexlify } from "@ethersproject/bytes";\n\nconst token = "0x00000000000000000000000000000001::STC::STC";\nconsole.log(token);\n/*\n0x00000000000000000000000000000001::STC::STC\n*/\nconst se = new BcsSerializer();\nse.serializeStr(token);\nconsole.log(se.getBytes());\n/*\nUint8Array(45) [\n      44, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48,\n      48, 48,  48, 48, 48, 48, 48, 48, 48, 48, 48,\n      48, 48,  48, 48, 48, 48, 48, 48, 48, 48, 48,\n      48, 49,  58, 58, 83, 84, 67, 58, 58, 83, 84,\n      67\n    ]\n*/\nconst tokenHex = hexlify(se.getBytes());\nconsole.log(tokenHex);\n/*\n0x2c307830303030303030303030303030303030303030303030303030303030303030313a3a5354433a3a535443\n*/\n')),(0,o.kt)("p",null,"In fact, ",(0,o.kt)("inlineCode",{parentName:"p"},"se.serializeStr")," transfer parameter's type from ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"Uint8Array")," and calls ",(0,o.kt)("inlineCode",{parentName:"p"},"se.serializeBytes")," internally."),(0,o.kt)("h3",{id:"u64"},(0,o.kt)("inlineCode",{parentName:"h3"},"U64")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { bcs } from "@starcoin/starcoin";\nimport { hexlify } from "@ethersproject/bytes";\n\nconst toChainId = 251;\nconsole.log(toChainId);\n/*\n251\n*/\nconst se = new BcsSerializer();\nse.serializeU64(toChainId);\nconsole.log(se.getBytes());\n/*\nUint8Array(8) [\n      251, 0, 0, 0,\n        0, 0, 0, 0\n    ]\n*/\nconst toChainIdHex = hexlify(se.getBytes());\nconsole.log(toChainIdHex);\n/*\n0xfb00000000000000\n*/\n')),(0,o.kt)("h3",{id:"u128"},(0,o.kt)("inlineCode",{parentName:"h3"},"U128")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { bcs } from "@starcoin/starcoin";\nimport { hexlify } from "@ethersproject/bytes";\n\nconst toChainId = 251;\nconsole.log(toChainId);\n/*\n251\n*/\nconst se = new BcsSerializer();\nse.serializeU128(toChainId);\nconsole.log(se.getBytes());\n/*\nUint8Array(16) [\n      251, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0\n    ]\n*/\nconst toChainIdHex = hexlify(se.getBytes());\nconsole.log(toChainIdHex);\n/*\n0xfb000000000000000000000000000000\n*/\n')),(0,o.kt)("h3",{id:"bool"},(0,o.kt)("inlineCode",{parentName:"h3"},"Bool")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { bcs } from "@starcoin/starcoin";\nimport { hexlify } from "@ethersproject/bytes";\n\nconst vote = true;\nconsole.log(vote);\n/*\ntrue\n*/\nconst se = new BcsSerializer();\nse.serializeBool(vote);\nconsole.log(se.getBytes());\n/*\nUint8Array(1) [ 1 ]\n*/\nconst voteHex = hexlify(se.getBytes());\nconsole.log(voteHex);\n/*\n0x01\n*/\n')),(0,o.kt)("h3",{id:"vectoru8"},(0,o.kt)("inlineCode",{parentName:"h3"},"Vector<U8>")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { starcoin_types, utils } from "@starcoin/starcoin";\nimport { hexlify, isHexString } from "@ethersproject/bytes";\n\nconst value = "\xe7\xe5\u221e\u2260\xa2\xf5\xdf\u2202\u0192\u222b";\nconst valueBytes = new Uint8Array(Buffer.from(value));\nconsole.log(valueBytes);\n/*\nUint8Array(24) [\n      195, 167, 195, 165, 226,\n      136, 158, 226, 137, 160,\n      194, 162, 195, 181, 195,\n      159, 226, 136, 130, 198,\n      146, 226, 136, 171\n    ]\n*/\nconst { length } = valueBytes;\nconst list: Seq<uint8> = [];\nfor (let i = 0; i < length; i++) {\n  list.push(valueBytes[i]);\n}\nconsole.log(list);\n/*\n[\n      195, 167, 195, 165, 226,\n      136, 158, 226, 137, 160,\n      194, 162, 195, 181, 195,\n      159, 226, 136, 130, 198,\n      146, 226, 136, 171\n    ]\n*/\nconst se = new BcsSerializer();\n\nstarcoin_types.Helpers.serializeVectorU8(list, se);\nconsole.log(se.getBytes());\n/*\nUint8Array(25) [\n       24, 195, 167, 195, 165, 226,\n      136, 158, 226, 137, 160, 194,\n      162, 195, 181, 195, 159, 226,\n      136, 130, 198, 146, 226, 136,\n      171\n    ]\n*/\nconst hex = hexlify(se.getBytes());\nconsole.log(hex);\n/*\n0x18c3a7c3a5e2889ee289a0c2a2c3b5c39fe28882c692e288ab\n*/\n')),(0,o.kt)("h3",{id:"vectorvectoru8"},(0,o.kt)("inlineCode",{parentName:"h3"},"Vector<Vector<U8>>")),(0,o.kt)("p",null,"Array of strings."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { starcoin_types, utils } from "@starcoin/starcoin";\nimport { hexlify, isHexString } from "@ethersproject/bytes";\n\nconst proofs = [\n  "0x8e942cfc78768a015a18657d8da260ce16744136cea62a9dd17159a9f0dc5110",\n];\nconst se = new BcsSerializer();\nse.serializeLen(proofs.length);\nproofs.forEach((proof) => {\n  se.serializeBytes(utls.hex.fromHexString(proof));\n});\nconsole.log(se.getBytes());\n/*\nUint8Array(34) [\n        1,  32, 142, 148,  44, 252, 120, 118,\n      138,   1,  90,  24, 101, 125, 141, 162,\n       96, 206,  22, 116,  65,  54, 206, 166,\n       42, 157, 209, 113,  89, 169, 240, 220,\n       81,  16\n    ]\n*/\nconst hex = hexlify(se.getBytes());\nconsole.log(hex);\n/*\n0x01208e942cfc78768a015a18657d8da260ce16744136cea62a9dd17159a9f0dc5110\n*/\n')),(0,o.kt)("p",null,"we can split the hex string into 3 part:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"01"),": the hex string of number 1, the length of array ",(0,o.kt)("inlineCode",{parentName:"li"},"proofs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"20"),": the hex string of number 32, the length of string proofs","[0]"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"8e942cfc78768a015a18657d8da260ce16744136cea62a9dd17159a9f0dc5110"),": the hex string of proofs","[0]",", in this case, is proofs","[0]"," itself.")),(0,o.kt)("h3",{id:"vectoru128"},(0,o.kt)("inlineCode",{parentName:"h3"},"Vector<U128>")),(0,o.kt)("p",null,"Array of U128."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { starcoin_types, utils } from "@starcoin/starcoin";\nimport { hexlify, isHexString } from "@ethersproject/bytes";\n\nconst amountArray = [100000000];\nconst se = new BcsSerializer();\nse.serializeLen(amountArray.length);\namountArray.forEach((amount) => {\n  se.serializeU128(amount);\n});\nconsole.log(se.getBytes());\n/*\nUint8Array(17) [\n      1, 0, 225, 245, 5, 0, 0,\n      0, 0,   0,   0, 0, 0, 0,\n      0, 0,   0\n    ]\n*/\nconst hex = hexlify(se.getBytes());\nconsole.log(hex);\n/*\n0x0100e1f505000000000000000000000000\n*/\n')),(0,o.kt)("p",null,"we can split the hex string into 2 part:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"01"),": the hex string of number 1, the length of array ",(0,o.kt)("inlineCode",{parentName:"li"},"amountArray")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"00e1f505000000000000000000000000"),": the hex string of amount 100000000, which type is U128")))}d.isMDXComponent=!0}}]);