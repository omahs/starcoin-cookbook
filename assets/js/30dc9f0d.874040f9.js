"use strict";(self.webpackChunkstarcoin_cookbook=self.webpackChunkstarcoin_cookbook||[]).push([[7712],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return v}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),v=o,d=u["".concat(s,".").concat(v)]||u[v]||m[v]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4868:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return p}});var r=n(3117),o=(n(7294),n(3905));const a={},i="Setting up Move develop environment",l={unversionedId:"move/prepare-move-env",id:"move/prepare-move-env",title:"Setting up Move develop environment",description:"Install mpm",source:"@site/docs/03-move/01-prepare-move-env.md",sourceDirName:"03-move",slug:"/move/prepare-move-env",permalink:"/docs/move/prepare-move-env",draft:!1,editUrl:"https://github.com/starcoinorg/starcoin-cookbook/edit/main/docs/03-move/01-prepare-move-env.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Move in Action",permalink:"/docs/move/"},next:{title:"Quick Start",permalink:"/docs/move/quick-start"}},s={},p=[{value:"Install mpm",id:"install-mpm",level:2},{value:"Install using the convenience script",id:"install-using-the-convenience-script",level:3},{value:"Install from binary",id:"install-from-binary",level:3},{value:"Install from source",id:"install-from-source",level:3},{value:"Summary",id:"summary",level:3},{value:"Install IDE plugin",id:"install-ide-plugin",level:2},{value:"VS Code",id:"vs-code",level:3},{value:"Set up env for move prover",id:"set-up-env-for-move-prover",level:2}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"setting-up-move-develop-environment"},"Setting up Move develop environment"),(0,o.kt)("h2",{id:"install-mpm"},"Install mpm"),(0,o.kt)("p",null,"Move Package Manager(mpm) is a command line tool to develop move projects, like Cargo for Rust, or NPM for NodeJS."),(0,o.kt)("h3",{id:"install-using-the-convenience-script"},"Install using the convenience script"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/starcoinorg/starcoin-framework/blob/main/scripts/dev_setup.sh"},(0,o.kt)("inlineCode",{parentName:"a"},"scripts/dev_setup.sh")),"(automated installation script) of starcoin-framework, which contains mpm, Rust, PATH config and the move prover environment setup.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl -Ss https://raw.githubusercontent.com/starcoinorg/starcoin-framework/main/scripts/dev_setup.sh | bash /dev/stdin -b -t -p\n")),(0,o.kt)("p",null,"The command above will install mpm and Rust to default location. It also set the PATH env. Check more arguments in shell script."),(0,o.kt)("h3",{id:"install-from-binary"},"Install from binary"),(0,o.kt)("p",null,"Download ",(0,o.kt)("inlineCode",{parentName:"p"},"mpm-[your_os]-latest.zip")," from the release page of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/starcoinorg/starcoin"},"starcoiorg/starcoin"),", unarchive it and add it to PATH env."),(0,o.kt)("h3",{id:"install-from-source"},"Install from source"),(0,o.kt)("p",null,"From local source code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ git clone https://github.com/starcoinorg/starcoin.git\n$ cd starcoin\n$ cargo install --path vm/move-package-manager\n")),(0,o.kt)("p",null,"Or from remote git repo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ cargo install --git https://github.com/starcoinorg/starcoin move-package-manager --bin mpm\n")),(0,o.kt)("p",null,"This will install the ",(0,o.kt)("inlineCode",{parentName:"p"},"mpm")," binary in your Cargo binary directory. On macOS and Linux this is usually ",(0,o.kt)("em",{parentName:"p"},"~/.cargo/bin/"),". You'll want to make sure this location is in your ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable."),(0,o.kt)("h3",{id:"summary"},"Summary"),(0,o.kt)("p",null,"Now you should be able to run the ",(0,o.kt)("inlineCode",{parentName:"p"},"mpm"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ mpm\nmove-package-manager 1.11.11\nStarcoin Core Dev <dev@starcoin.org>\nCLI frontend for the Move compiler and VM\n\nUSAGE:\n    mpm [OPTIONS] <SUBCOMMAND>\n  ...\n")),(0,o.kt)("h2",{id:"install-ide-plugin"},"Install IDE plugin"),(0,o.kt)("h3",{id:"vs-code"},"VS Code"),(0,o.kt)("p",null,"Search ",(0,o.kt)("inlineCode",{parentName:"p"},"starcoin-ide")," in Extensions."),(0,o.kt)("h2",{id:"set-up-env-for-move-prover"},"Set up env for move prover"),(0,o.kt)("p",null,"Move Prover is a formal verification tool designed to prevent bugs in smart contracts written in Move language. ",(0,o.kt)("a",{parentName:"p",href:"/docs/move/move-prover/mvp-tutorial"},"more")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/starcoinorg/starcoin-framework/blob/main/scripts/dev_setup.sh"},(0,o.kt)("inlineCode",{parentName:"a"},"dev_setup.sh")),"(automated installation script) of starcoin-framework")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl -Ss https://raw.githubusercontent.com/starcoinorg/starcoin-framework/main/scripts/dev_setup.sh | bash /dev/stdin -bpty\n")),(0,o.kt)("p",null,"When the above command is executed, type ",(0,o.kt)("inlineCode",{parentName:"p"},"boogie /version"),' and if the output is similar to "Boogie program verifier version X.X.X", then the installation has been successful.'),(0,o.kt)("p",null,"Note that currently Move Prover can only run under UNIX-based operating systems (e.g. Linux, macOS). Windows users can run it by installing WSL."))}m.isMDXComponent=!0}}]);