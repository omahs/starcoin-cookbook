"use strict";(self.webpackChunkstarcoin_cookbook=self.webpackChunkstarcoin_cookbook||[]).push([[1438],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=a.createContext({}),i=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=i(e.components);return a.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=i(t),d=l,k=m["".concat(u,".").concat(d)]||m[d]||c[d]||r;return t?a.createElement(k,o(o({ref:n},p),{},{components:t})):a.createElement(k,o({ref:n},p))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=m;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var i=2;i<r;i++)o[i]=t[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7011:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return i}});var a=t(3117),l=(t(7294),t(3905));const r={},o="2. MoveVM\u8d44\u6e90\u4fee\u6539\u548c\u9500\u6bc1\u7684\u539f\u7406",s={unversionedId:"move/move-vm/create-resource",id:"move/move-vm/create-resource",title:"2. MoveVM\u8d44\u6e90\u4fee\u6539\u548c\u9500\u6bc1\u7684\u539f\u7406",description:"------",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/03-move/96-move-vm/02-create-resource.md",sourceDirName:"03-move/96-move-vm",slug:"/move/move-vm/create-resource",permalink:"/zh/docs/move/move-vm/create-resource",draft:!1,editUrl:"https://github.com/starcoinorg/starcoin-cookbook/edit/main/i18n/zh/docusaurus-plugin-content-docs/current/03-move/96-move-vm/02-create-resource.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"1. Move\u865a\u62df\u673a\u7b80\u8981\u4ecb\u7ecd",permalink:"/zh/docs/move/move-vm/summary"},next:{title:"3. MoveVM\u8d44\u6e90\u4fee\u6539\u548c\u9500\u6bc1\u7684\u539f\u7406",permalink:"/zh/docs/move/move-vm/modify-and-drop-resource"}},u={},i=[{value:"0. Move\u4e2d\u7684\u8d44\u6e90\u7c7b\u578b",id:"0-move\u4e2d\u7684\u8d44\u6e90\u7c7b\u578b",level:2},{value:"1. \u8d44\u6e90\u7684\u521b\u5efa",id:"1-\u8d44\u6e90\u7684\u521b\u5efa",level:2},{value:"1.1 \u521b\u5efa\u8d44\u6e90\u5bf9\u5e94\u7684\u5b57\u8282\u7801\u6307\u4ee4",id:"11-\u521b\u5efa\u8d44\u6e90\u5bf9\u5e94\u7684\u5b57\u8282\u7801\u6307\u4ee4",level:3},{value:"1.2 \u865a\u62df\u673a\u4e2d MoveTo \u6307\u4ee4\u7684\u5b9e\u73b0",id:"12-\u865a\u62df\u673a\u4e2d-moveto-\u6307\u4ee4\u7684\u5b9e\u73b0",level:3}],p={toc:i};function c(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"2-movevm\u8d44\u6e90\u4fee\u6539\u548c\u9500\u6bc1\u7684\u539f\u7406"},"2. MoveVM\u8d44\u6e90\u4fee\u6539\u548c\u9500\u6bc1\u7684\u539f\u7406"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"0-move\u4e2d\u7684\u8d44\u6e90\u7c7b\u578b"},"0. Move\u4e2d\u7684\u8d44\u6e90\u7c7b\u578b"),(0,l.kt)("p",null,"Move \u4e2d\u7684\u8d44\u6e90\u7c7b\u578b\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u5b83\u5176\u5b9e\u5c31\u662f Move \u4e2d\u7684\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u5728\u7ed3\u6784\u4f53\u4e0a\u52a0\u4e86\u4e00\u4e9b\u9650\u5236\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u8d44\u6e90\u5b58\u50a8\u5728\u5e10\u6237\u4e0b\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u5728\u5206\u914d\u5e10\u6237\u540e\u624d\u4f1a\u5b58\u5728\uff0c\u5e76\u4e14\u53ea\u80fd\u901a\u8fc7\u8be5\u5e10\u6237\u8bbf\u95ee\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u4e00\u4e2a\u5e10\u6237\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u5bb9\u7eb3\u4e00\u4e2a\u67d0\u7c7b\u578b\u7684\u8d44\u6e90\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u8d44\u6e90\u4e0d\u80fd\u88ab\u590d\u5236\uff0c\u51c6\u786e\u7684\u8bf4\u6ca1\u6709\u529e\u6cd5\u53bb\u590d\u5236\u8d44\u6e90\u3002"),(0,l.kt)("li",{parentName:"ol"},"Resource \u5fc5\u9700\u88ab\u4f7f\u7528\uff0c\u8fd9\u610f\u5473\u7740\u5fc5\u987b\u5c06\u65b0\u521b\u5efa\u7684 Resource move \u5230\u67d0\u4e2a\u5e10\u6237\u4e0b\uff0c\u4ece\u5e10\u6237\u79fb\u51fa\u7684 Resource \u5fc5\u987b\u88ab\u89e3\u6784\u6216\u5b58\u50a8\u5728\u53e6\u4e00\u4e2a\u5e10\u6237\u4e0b\u3002")),(0,l.kt)("h2",{id:"1-\u8d44\u6e90\u7684\u521b\u5efa"},"1. \u8d44\u6e90\u7684\u521b\u5efa"),(0,l.kt)("h3",{id:"11-\u521b\u5efa\u8d44\u6e90\u5bf9\u5e94\u7684\u5b57\u8282\u7801\u6307\u4ee4"},"1.1 \u521b\u5efa\u8d44\u6e90\u5bf9\u5e94\u7684\u5b57\u8282\u7801\u6307\u4ee4"),(0,l.kt)("p",null,"\u8d44\u6e90\u5fc5\u987b\u5b58\u50a8\u5728\u8d26\u6237\u4e0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u521b\u5efa\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u8981\u4f20\u5165\u4e00\u4e2a\u8d26\u6237\u4fe1\u606f\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-move"},"address 0x2 {\n    module Counter {\n        struct Counter has key { i: u64 }\n\n        public fun publish(account: &signer, i: u64) {\n          move_to(account, Counter { i })\n        }\n\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"move_to()")," \u51fd\u6570\u8d1f\u8d23\u8d44\u6e90\u7684\u521b\u5efa\uff0c\u5b83\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u8d26\u6237\u548c\u9700\u8981\u521b\u5efa\u7684\u8d44\u6e90\u7c7b\u578b\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"move_to()")," \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-move"},"native fun move_to<T: key>(account: &signer, value: T);\n")),(0,l.kt)("p",null,"\u4e0a\u9762\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"publish()")," \u7ecf\u8fc7\u7f16\u8bd1\u51fa\u7684\u5b57\u8282\u7801\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"public publish() {\nB0:\n    0: MoveLoc[0](account: &signer)\n    1: MoveLoc[1](i: u64)\n    2: Pack[0](Counter)\n    3: MoveTo[0](Counter)\n    4: Ret\n}\n")),(0,l.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u5bf9\u5b57\u8282\u7801\u5217\u8868\u4e2d\u7684\u6307\u4ee4\u9010\u4e00\u89e3\u6790\uff0c\u8ba9\u5927\u5bb6\u80fd\u770b\u660e\u767d\u5927\u81f4\u7684\u7f16\u8bd1\u8fc7\u7a0b\u3002"),(0,l.kt)("p",null,"\u4e0d\u8fc7\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u56de\u987e\u4e00\u4e0b Move \u865a\u62df\u673a\u4e2d\u4ee3\u8868\u51fd\u6570\u6808\u5e27\u7684\u7ed3\u6784\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6: ",(0,l.kt)("inlineCode",{parentName:"p"},"language/move-vm/runtime/src/interpreter.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"struct Frame {\n    pc: u16,\n    locals: Locals,\n    function: Arc<Function>,\n    ty_args: Vec<Type>,\n}\n")),(0,l.kt)("p",null,"\u6211\u4eec\u770b\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"Frame")," \u7ed3\u6784\u4f53 \u4e2d\u6709\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"locals")," \u5b57\u6bb5\uff0c\u5b83\u5176\u5b9e\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d\u4fdd\u5b58\u4e86\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u6267\u884c\u4e4b\u524d\uff0c\u6240\u6709\u7684\u5c40\u90e8\u53d8\u91cf\u8981\u5148\u4fdd\u5b58\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u3002"),(0,l.kt)("p",null,"\u51fd\u6570\u7684\u5b9e\u53c2\u548c\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u7edf\u79f0\u4e3a\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u3002"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"MoveLoc[0](account: &signer)"),"  \u6307\u4ee4\u628a\u51fd\u6570\u53c2\u6570 ",(0,l.kt)("inlineCode",{parentName:"li"},"account")," \u4ece ",(0,l.kt)("inlineCode",{parentName:"li"},"locals")," \u6570\u7ec4\u4e2d\u53d6\u51fa\uff0c\u5e76\u653e\u5728\u64cd\u4f5c\u6570\u6808\u4e0a\u3002"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"MoveLoc[1](i: u64)")," \u6307\u4ee4\u628a\u5c40\u90e8\u53d8\u91cf ",(0,l.kt)("inlineCode",{parentName:"li"},"i")," \u4ece ",(0,l.kt)("inlineCode",{parentName:"li"},"locals")," \u6570\u7ec4\u4e2d\u53d6\u51fa\uff0c\u5e76\u653e\u5728\u64cd\u4f5c\u6570\u6808\u4e0a\u3002\u73b0\u5728\u6808\u4e0a\u6709\u4e24\u4e2a\u5143\u7d20\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"i")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"account"),"\u3002"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"Pack[0](Counter)")," \u6307\u4ee4\u4ece\u64cd\u4f5c\u6570\u6808\u7684\u6808\u9876\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u5c06\u5b83\u6253\u5305\u6210\u4e00\u4e2a\u7ed3\u6784\u4f53\u5bf9\u8c61\uff0c\u5e76\u518d\u6b21\u653e\u5728\u64cd\u4f5c\u6570\u6808\u4e0a\u3002\u73b0\u5728\u6808\u4e0a\u7684\u4e24\u4e2a\u5143\u7d20\u5c31\u53d8\u6210\u4e86\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"Counter\u7ed3\u6784\u4f53\u5bf9\u8c61")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"account"),"\u3002"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"MoveTo[0](Counter)")," \u6307\u4ee4\u662f\u6e90\u7801\u4e2d ",(0,l.kt)("inlineCode",{parentName:"li"},"move_to()")," \u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u3002",(0,l.kt)("inlineCode",{parentName:"li"},"MoveTo")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"move_to()")," \u51fd\u6570\u4e00\u6837\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u6b64\u65f6\u64cd\u4f5c\u6570\u6808\u4e2d\u6b63\u597d\u6709\u4e24\u4e2a\u5143\u7d20\uff1a",(0,l.kt)("inlineCode",{parentName:"li"},"Counter\u7ed3\u6784\u4f53\u5bf9\u8c61")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"account"),"\u3002",(0,l.kt)("inlineCode",{parentName:"li"},"MoveTo"),"  \u6307\u4ee4\u4ece\u6808\u4e2d\u53d6\u51fa\u4e24\u4e2a\u5143\u7d20\u5e76\u6267\u884c\u6267\u884c\uff0c\u6700\u7ec8\u5c06 ",(0,l.kt)("inlineCode",{parentName:"li"},"Counter\u7ed3\u6784\u4f53\u5bf9\u8c61")," \u4fdd\u5b58\u5230 ",(0,l.kt)("inlineCode",{parentName:"li"},"account")," \u4ee3\u8868\u7684\u8d26\u6237\u4e0b\u3002")),(0,l.kt)("p",null,"\u7ecf\u8fc7\u5bf9\u4e0a\u9762\u7684\u5b57\u8282\u7801\u6307\u4ee4\u5e8f\u5217\u7684\u5206\u6790\uff0c\u4e0d\u96be\u770b\u51fa\u6700\u91cd\u8981\u7684\u6307\u4ee4\u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"MoveTo")," \u6307\u4ee4\uff0c\u662f\u5b83\u6267\u884c\u4e86\u6700\u91cd\u8981\u7684\u8d44\u6e90\u521b\u5efa\u64cd\u4f5c\u3002"),(0,l.kt)("h3",{id:"12-\u865a\u62df\u673a\u4e2d-moveto-\u6307\u4ee4\u7684\u5b9e\u73b0"},"1.2 \u865a\u62df\u673a\u4e2d MoveTo \u6307\u4ee4\u7684\u5b9e\u73b0"),(0,l.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u6765\u5bf9\u7167 Move \u865a\u62df\u673a\u7684\u4ee3\u7801\uff0c\u5206\u6790\u865a\u62df\u673a\u4e2d\u5982\u4f55\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"MoveTo")," \u6307\u4ee4\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u89e3\u91ca\u5668\u7684\u603b\u4f53\u6267\u884c\u8fc7\u7a0b\uff1a")),(0,l.kt)("p",null,"\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5c31\u662f Move \u865a\u62df\u673a\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"MoveTo")," \u6307\u4ee4\u7684\u89e3\u91ca\u6267\u884c\u8fc7\u7a0b\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/move-vm/runtime/src/interpreter.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"// sd_idx: \u4ee3\u8868\u4e86\u8d44\u6e90\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u5728Move\u865a\u62df\u673a\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\u5217\u8868\u4e2d\u7684\u7d22\u5f15\n// Move\u865a\u62df\u673a\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\u5217\u8868\uff0c\u662f\u865a\u62df\u673a\u4eceMove\u8bed\u8a00\u5b57\u8282\u7801\u6587\u4ef6\u4e2d\u89e3\u6790\u5f97\u6765\u7684\n// \u5b9e\u9645\u4e0a\u8d44\u6e90\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\uff0c\u662f\u7f16\u8bd1\u5668\u5728\u751f\u6210\u5b57\u8282\u7801\u6587\u4ef6\u65f6\u5199\u5165\u7684\u4fe1\u606f\nBytecode::MoveTo(sd_idx) => {\n    \n    // \u4ece\u64cd\u4f5c\u6570\u6808\u4e2d\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20\uff1a\u8d44\u6e90\u5bf9\u8c61\n    let resource = interpreter.operand_stack.pop()?;\n    // \u4ece\u64cd\u4f5c\u6570\u6808\u4e2d\u5f39\u51fa\u4e00\u4e2a\u5143\u7d20\uff1a\u8d26\u6237\n    let signer_reference = interpreter.operand_stack.pop_as::<StructRef>()?;\n\n    // \u5c06\u64cd\u4f5c\u6570\u6808\u4e2d\u5f39\u51fa\u7684\u8d26\u6237\u5bf9\u8c61\uff0c\u8f6c\u6362\u6210 AccountAddress \u7c7b\u578b\n    let addr = signer_reference\n        .borrow_field(0)?\n        .value_as::<Reference>()?\n        .read_ref()?\n        .value_as::<AccountAddress>()?;\n\n    // \u4f7f\u7528sd_idx\u7ed3\u6784\u4f53\u7d22\u5f15\uff0c\u5230\u7ed3\u6784\u4f53\u5b9a\u4e49\u8868\u4e2d\u67e5\u8be2\u7ed3\u6784\u4f53\u7c7b\u578b\n    let ty = resolver.get_struct_type(*sd_idx);\n    \n    // \u8c03\u7528\u89e3\u91ca\u5668\u7684 move_to \u51fd\u6570\uff0c\u4f20\u5165\u6570\u636e\u5b58\u50a8 data_store\uff0c\u8d26\u6237\u5730\u5740\uff0c\u8d44\u6e90\u7c7b\u578b\uff0c\u8d44\u6e90\u5bf9\u8c61\n    let size = interpreter.move_to(data_store, addr, &ty, resource)?;\n    \n    gas_status.charge_instr_with_size(Opcodes::MOVE_TO, size)?;\n}\n")),(0,l.kt)("p",null,"\u4ece\u4e0a\u9762Move\u865a\u62df\u673a\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"MoveTo")," \u6307\u4ee4\u7684\u4ee3\u7801\u5b9e\u73b0\u5165\u53e3\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"move_to()")," \u51fd\u6570\u5148\u4ece\u64cd\u4f5c\u6570\u6808\u4e0a\u5f39\u51fa\u4e24\u4e2a\u5143\u7d20\uff1a\u8d26\u6237\u548c\u8d44\u6e90\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"interpreter.move_to()")," \u51fd\u6570\u5b9e\u73b0\u771f\u6b63\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"MoveTo")," \u529f\u80fd\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"interpreter.move_to()")," \u7684\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/move-vm/runtime/src/interpreter.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"fn move_to(\n    &mut self,\n    data_store: &mut impl DataStore,\n    addr: AccountAddress,\n    ty: &Type,\n    resource: Value,\n) -> PartialVMResult<AbstractMemorySize<GasCarrier>> {\n    let size = resource.size();\n    Self::load_resource(data_store, addr, ty)?.move_to(resource)?;\n    Ok(size)\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u67e5\u8be2\u8d26\u6237\u4e0b\u7684\u8d44\u6e90\uff1a")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6838\u5fc3\u7684\u4ee3\u7801\uff0c\u5c31\u662f\u4e0b\u9762\u8fd9\u884c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"Self::load_resource(data_store, addr, ty)?.move_to(resource)?;\n")),(0,l.kt)("p",null,"\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u7684\u542b\u4e49\u662f\uff0c\u9996\u5148\u6839\u636e ",(0,l.kt)("inlineCode",{parentName:"p"},"addr")," \u5373\u8d26\u6237\u5730\u5740\uff0c\u67e5\u8be2\u5230\u8be5\u8d26\u6237\u4e0b\u7684\u8d44\u6e90\uff0c\u518d\u8c03\u7528\u8d44\u6e90\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"move_to()")," \u51fd\u6570\uff0c\u5c06\u65b0\u7684\u8d44\u6e90\u4fdd\u5b58\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Self::load_resource()")," \u51fd\u6570\u6700\u7ec8\u4f1a\u8c03\u7528\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"DataStore")," \u7c7b\u578b\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"load_resource()")," \u51fd\u6570\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/move-vm/runtime/src/interpreter.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'impl<\'r, \'l, S: MoveResolver> DataStore for TransactionDataCache<\'r, \'l, S> {\n    fn load_resource(\n        &mut self,\n        addr: AccountAddress,\n        ty: &Type,\n    ) -> PartialVMResult<&mut GlobalValue> {\n        // \u4ece self.account_map \u4e2d\u4f7f\u7528 addr \u67e5\u8be2\u8be5\u8d26\u6237\u5730\u5740\uff0c\u662f\u5426\u4e4b\u524d\u5df2\u7ecf\u67e5\u8be2\u8fc7\uff0c\u67e5\u8be2\u8fc7\u5219\u8fd4\u56de AccountDataCache\n        let account_cache = Self::get_mut_or_insert_with(&mut self.account_map, &addr, || {\n            (addr, AccountDataCache::new())\n        });\n\n        // \u8d26\u6237\u7684 AccountCache \u4fdd\u5b58\u4e86\u5f88\u591a\u8d26\u6237\u4e2d\u5f88\u591a\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4e0b\u9762\u4e00\u884c\u4ee3\u7801\u4f7f\u7528 \u8d44\u6e90 \u7684\u7c7b\u578b\u67e5\u8be2\uff0c\u8d26\u6237\u4e0b\u662f\u5426\u6709\u8be5\u8d44\u6e90\n        // \u5982\u679c\u6ca1\u6709\u5bf9\u5e94\u7684\u8d44\u6e90\uff0c\u5219\u5c06\u8d44\u6e90\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u7684\u7c7b\u578b\uff0c\u548c\u7528\u6237\u7ec4\u6210\u7684 \u8def\u5f84 \u4ece\u5e95\u5c42\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u6570\u636e\n        // \u5982\u679c\u80fd\u8bfb\u53d6\u6570\u636e\u5230\u5219\u9996\u5148\u53cd\u5e8f\u5217\u5316\u4e3a Value \u7c7b\u578b\uff0c\u7136\u540e\u5c06 Value \u7c7b\u578b\u5305\u88c5\u4e3a GlobalValue \u7c7b\u578b\u8fd4\u56de\n        if !account_cache.data_map.contains_key(ty) {\n            // \u4f7f\u7528\u8d44\u6e90\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\uff0c\u5728\u5b57\u8282\u7801\u7684loader\u4e2d\u67e5\u8be2\u7ed3\u6784\u4f53\u7684Tag\n            let ty_tag = match self.loader.type_to_type_tag(ty)? {\n                TypeTag::Struct(s_tag) => s_tag,\n                _ =>\n                // non-struct top-level value; can\'t happen\n                {\n                    return Err(PartialVMError::new(StatusCode::INTERNAL_TYPE_ERROR))\n                }\n            };\n            let ty_layout = self.loader.type_to_type_layout(ty)?;\n\n            // \u5c06\u7ed3\u6784\u4f53\u7684Tag\u548c\u8d26\u6237\u5730\u5740\u7ec4\u5408\uff0c\u4f5c\u4e3a\u8def\u5f84\uff0c\u67e5\u8be2\u8d26\u6237\u4e0b\u7684\u8d44\u6e90\n            let gv = match self.remote.get_resource(&addr, &ty_tag) {\n                Ok(Some(blob)) => {\n                    let val = match Value::simple_deserialize(&blob, &ty_layout) {\n                        Some(val) => val,\n                        None => {\n                            let msg =\n                                format!("Failed to deserialize resource {} at {}!", ty_tag, addr);\n                            return Err(PartialVMError::new(\n                                StatusCode::FAILED_TO_DESERIALIZE_RESOURCE,\n                            )\n                            .with_message(msg));\n                        }\n                    };\n\n                    GlobalValue::cached(val)? // \u67e5\u5230\u4e86\u8fd4\u56de GlobalValue::Cached\n                }\n                Ok(None) => GlobalValue::none(), // \u6ca1\u67e5\u5230\u8fd4\u56de GlobalValue::None\n                Err(err) => {\n                    let msg = format!("Unexpected storage error: {:?}", err);\n                    return Err(\n                        PartialVMError::new(StatusCode::UNKNOWN_INVARIANT_VIOLATION_ERROR)\n                            .with_message(msg),\n                    );\n                }\n            };\n\n            // \u67e5\u8be2\u5230\u4e86\u8d44\u6e90\u4e4b\u540e\uff0c\u5c06\u8d44\u6e90\u5bf9\u8c61\u653e\u5728\u8d26\u6237\u5730\u5740\u5bf9\u5e94\u7684 account_cache \u4e2d\n            account_cache.data_map.insert(ty.clone(), (ty_layout, gv));\n        }\n\n        // \u8fd4\u56de\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u5e94\u7684 GlobalValue \u7684\u53ef\u53d8\u5f15\u7528\n        Ok(account_cache\n            .data_map\n            .get_mut(ty)\n            .map(|(_ty_layout, gv)| gv)\n            .expect("global value must exist"))\n    }\n}\n')),(0,l.kt)("p",null,"\u51fd\u6570\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u5728\u4ee3\u7801\u4e2d\u5df2\u7ecf\u6709\u6ce8\u91ca\uff0c\u5176\u4e2d\u6700\u5173\u952e\u7684\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"self.remote.get_resource(&addr, &ty_tag)")," \u8fd9\u4e00\u884c\u4ee3\u7801\uff0c\u5b83\u5c06\u8d26\u6237\u5bf9\u5e94\u7684 addr \u548c\u8d44\u6e90\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53 tag\uff0c\u7ec4\u6210\u4e00\u4e2a\u8def\u5f84\u53bb\u5e95\u5c42\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u6570\u636e\u3002"),(0,l.kt)("p",null,"\u4ee5\u672c\u5730\u78c1\u76d8\u4e2d\u67e5\u8be2\u6570\u636e\u4e3e\u4f8b\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/tools/move-cli/src/sandbox/utils/on_disk_state_view.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"impl ResourceResolver for OnDiskStateView {\n    type Error = anyhow::Error;\n\n    fn get_resource(\n        &self,\n        address: &AccountAddress,\n        struct_tag: &StructTag,\n    ) -> Result<Option<Vec<u8>>, Self::Error> {\n        self.get_resource_bytes(*address, struct_tag.clone())\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"OnDiskStateView")," \u7c7b\u5b9e\u73b0\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"get_resource()")," \u51fd\u6570\uff0c\u6838\u5fc3\u7684\u4e00\u884c\u4ee3\u7801\u662f\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"self.get_resource_bytes(*address, struct_tag.clone())"),"\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"OnDiskStateView")," \u7684\u51fd\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"get_resources_bytes()")," \u5b9e\u73b0\u4e86\u67e5\u8be2\u6570\u636e\u529f\u80fd\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/tools/move-resource-viewer/src/lib.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn get_resource_bytes(&self, addr: AccountAddress, tag: StructTag) -> Result<Option<Vec<u8>>> {\n    Self::get_bytes(&self.get_resource_path(addr, tag))\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"get_resource_bytes()")," \u51fd\u6570\u9996\u5148\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"get_resource_path()")," \u628a\u8d26\u6237\u7684\u5730\u5740\u548c\u8d44\u6e90\u7ed3\u6784\u4f53\u7684Tag\u7ec4\u7ec7\u6210\u8def\u5f84\u53c2\u6570\uff0c\u7ec4\u5408\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"./language/tools/move-resource-viewer/src/lib.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"fn get_resource_path(&self, addr: AccountAddress, tag: StructTag) -> PathBuf {\n    let mut path = self.get_addr_path(&addr);\n    path.push(RESOURCES_DIR);\n    path.push(StructID(tag).to_string());\n    path.with_extension(BCS_EXTENSION)\n}\n")),(0,l.kt)("p",null,"\u7136\u540e ",(0,l.kt)("inlineCode",{parentName:"p"},"get_resource_bytes()")," \u51fd\u6570\u76f4\u63a5\u4ece\u6587\u4ef6\u7cfb\u7edf\u8bfb\u53d6\u6570\u636e\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/tools/move-cli/src/sandbox/utils/on_disk_state_view.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"fn get_bytes(path: &Path) -> Result<Option<Vec<u8>>> {\n    Ok(if path.exists() {\n        // \u4ece\u78c1\u76d8\u8bfb\u53d6\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de u8 \u5b57\u8282\u6570\u636e\n        Some(fs::read(path)?)\n    } else {\n        None\n    })\n}\n")),(0,l.kt)("p",null,"\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"MoveTo")," \u6307\u4ee4\u9996\u5148\u6839\u636e\u8d26\u6237\u5730\u5740\u548c\u5bf9\u5e94\u7684\u8d44\u6e90\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u7ec4\u5408\u6210\u4e00\u4e2a\u8def\u5f84\uff0c\u4ece\u78c1\u76d8\u4e2d\u67e5\u8be2\u5bf9\u5e94\u7684\u6570\u636e\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5c06\u8d44\u6e90\u5bf9\u8c61\u4fdd\u5b58\uff1a")),(0,l.kt)("p",null,"\u56de\u5230\u521a\u5f00\u59cb\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u77e5\u9053 ",(0,l.kt)("inlineCode",{parentName:"p"},"MoveTo")," \u6307\u4ee4\u7684\u6838\u5fc3\u5206\u4e3a\u4e24\u90e8\uff0c\u7b2c\u4e00\u6b65\u662f\u628a\u8d26\u6237\u4e0b\u7684\u8d44\u6e90\u4ece\u5185\u5b58\u4e2d\u7684\u7f13\u5b58\u6216\u78c1\u76d8\u4e2d\u8bfb\u53d6\u51fa\u6765\uff0c\u7b2c\u4e8c\u6b65\u662f\u5c06\u5f53\u524d\u9700\u8981\u4fdd\u5b58\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"resource")," \u4fdd\u5b58\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"Self::load_resource(data_store, addr, ty)?.move_to(resource)?;\n")),(0,l.kt)("p",null,"\u901a\u8fc7\u4e0a\u4e00\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u77e5\u9053\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"Self::load_resource()")," \u8fd4\u56de\u7684\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue")," \u7c7b\u578b\u7684\u6570\u636e\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue")," \u7c7b\u578b\u7ed3\u6784\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug)]\npub struct GlobalValue(GlobalValueImpl);\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue")," \u7ed3\u6784\u4f53\u7c7b\u578b\u53ea\u4fdd\u5b58\u4e00\u4e2a\u7c7b\u578b: ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueImpl"),"\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueImpl")," \u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"enum GlobalValueImpl {\n    // \u6ca1\u6709\u4fdd\u5b58\u4efb\u4f55\u8d44\u6e90\n    None,\n\n    // \u8d44\u6e90\u5df2\u7ecf\u4fdd\u5b58\u5728GlobalValue\u4e2d\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u6301\u4e45\u5316\u5230\u5b58\u50a8\n    Fresh {\n        fields: Rc<RefCell<Vec<ValueImpl>>>,\n    },\n\n    // \u8d44\u6e90\u5df2\u7ecf\u4fdd\u5b58\u5728Global\u4e2d\uff0c\u4e5f\u5728\u6301\u4e45\u5316\u7684\u5b58\u50a8\u4e2d\n    // status \u5b57\u6bb5\u6307\u793a\u8d44\u6e90\u53ef\u80fd\u5df2\u88ab\u66f4\u6539\n    Cached {\n        fields: Rc<RefCell<Vec<ValueImpl>>>,\n        status: Rc<RefCell<GlobalDataStatus>>,\n    },\n\n    // \u8d44\u6e90\u5df2\u7ecf\u5728\u5b58\u50a8\u4e2d\u6301\u4e45\u5316\uff0c\u4f46\u662f\u88ab\u5f53\u524d\u4ea4\u6613\u6807\u8bb0\u4e3a\u5220\u9664\n    Deleted,\n}\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueImpl")," \u7c7b\u578b\u4f9d\u9760 ",(0,l.kt)("inlineCode",{parentName:"p"},"ValueImpl")," \u7c7b\u578b\u4fdd\u5b58\u771f\u6b63\u7684\u6570\u636e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"enum ValueImpl {\n    Invalid,\n\n    U8(u8),\n    U64(u64),\n    U128(u128),\n    Bool(bool),\n    Address(AccountAddress),\n\n    Container(Container),\n\n    ContainerRef(ContainerRef),\n    IndexedRef(IndexedRef),\n}\n")),(0,l.kt)("p",null,"\u679a\u4e3e\u7c7b\u578b ",(0,l.kt)("inlineCode",{parentName:"p"},"ValueImpl")," \u4ee3\u8868\u4e86\u771f\u6b63\u4fdd\u5b58\u7684\u6570\u636e\uff0c\u51fa\u6765\u57fa\u672c\u7c7b\u578b\u4ee5\u5916\uff0c\u6700\u91cd\u8981\u7684\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"Container"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"ContainerRef"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"IndexedRef"),"\uff0c\u8fd9\u51e0\u4e2a\u7c7b\u578b\u5728\u5b9e\u73b0 Move \u4e2d\u501f\u7528\u7684\u529f\u80fd\u65f6\uff0c\u53d1\u6325\u4e86\u91cd\u8981\u7684\u4f5c\u7528\u3002"),(0,l.kt)("p",null,"Move \u4e2d\u501f\u7528\u7684\u5b9e\u73b0\u5206\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u7f16\u8bd1\u5668\u6839\u636e\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684IR\uff0c\u5206\u6790\u51fa\u7684\u501f\u7528\u4f9d\u8d56\u56fe\uff0c\u6765\u5224\u65ad\u662f\u5426\u6709\u975e\u6cd5\u7684\u501f\u7528\uff0c\u800c\u865a\u62df\u673a\u4e2d\u7684\u501f\u7528\u529f\u80fd\uff0c\u5219\u5b9e\u73b0\u4e86\u5bf9\u8c61\u7684\u5b9e\u9645\u501f\u7528\u8fc7\u7a0b\u3002"),(0,l.kt)("p",null,"Move \u4e2d\u501f\u7528\u7684\u5b9e\u73b0\u8fd9\u91cc\u53ea\u662f\u987a\u5e26\u63d0\u53ca\uff0c\u4e4b\u540e\u4f1a\u6709\u5176\u4ed6\u6587\u7ae0\u8be6\u7ec6\u5206\u6790\u501f\u7528\u7684\u5b9e\u73b0\u3002"),(0,l.kt)("p",null,"\u6211\u4eec\u56de\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue")," \u7c7b\u578b\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"move_to()")," \u51fd\u6570\u4e2d\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/move-vm/runtime/src/interpreter.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"fn move_to(&mut self, val: ValueImpl) -> PartialVMResult<()> {\n    match self {\n        // \u4e4b\u524d\u67e5\u51fa\u6570\u636e\uff0c\u7c7b\u578b\u662f Self::Cached\uff0c\u8bf4\u660e\u5df2\u7ecf\u8d26\u6237\u4e0b\u5df2\u7ecf\u6709\u8be5\u8d44\u6e90\uff0c\u4e0d\u80fd\u518d\u6b21 move_to\n        Self::Fresh { .. } | Self::Cached { .. } => {\n            return Err(PartialVMError::new(StatusCode::RESOURCE_ALREADY_EXISTS))\n        }\n\n        // \u4e4b\u524d\u672a\u67e5\u51fa\u6570\u636e\uff0c\u5c31\u8bbe\u7f6e\u65b0\u7684\u503c\uff0c\u5e76\u6807\u8bb0\u81ea\u8eab(GlobalValueImpl)\u4e3aFresh\u72b6\u6001\n        // Fresh\u72b6\u6001\u5728 into_effect() \u51fd\u6570\u4e2d\u4f1a\u88ab\u6807\u8bb0\u4e3a GlobalValueEffect::Changed\n        Self::None => *self = Self::fresh(val)?,\n\n        // \u6570\u636e\u5df2\u88ab\u6807\u8bb0\u4e3a Deleted\uff0cmove_from() \u51fd\u6570\u6807\u8bb0\n        // Dirty \u72b6\u6001\u4e5f\u4f1a\u88ab\u6807\u8bb0\u4e3a GlobalValueEffect::Changed\n        Self::Deleted => *self = Self::cached(val, GlobalDataStatus::Dirty)?,\n    }\n    Ok(())\n}\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u6bd4\u8f83\u5173\u952e\u7684\u90e8\u5206\uff0c\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"p"},"ValueImpl")," \u5bf9\u8c61\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"Fresh")," \uff0c\u8bf4\u660e\u8d26\u6237\u4e0b\u5df2\u7ecf\u5b58\u5728\u5bf9\u5e94\u7684\u8d44\u6e90\uff0c\u5219\u865a\u62df\u673a\u62a5\u9519\uff1a",(0,l.kt)("strong",{parentName:"p"},"\u8d44\u6e90\u5df2\u7ecf\u5b58\u5728\uff01")),(0,l.kt)("p",null,"\u5982\u679c\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"None")," \u8bf4\u660e\u4e4b\u524d\u8d26\u6237\u4e0b\u4ece\u6765\u6ca1\u5b58\u5728\u8fc7\u8be5\u7c7b\u578b\u7684\u8d44\u6e90\uff0c\u5c31\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"*self = Self::fresh(val)\n")),(0,l.kt)("p",null,"\u8fd9\u91cc\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"self")," \u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueImpl")," \u7ed3\u6784\u4f53\u5bf9\u8c61\uff0c\u8fd9\u884c\u4ee3\u7801\u662f\u628a ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueImpl")," \u5bf9\u8c61\u8bbe\u7f6e\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueImpl::Fresh"),"\uff0c\u5e76\u4fdd\u5b58\u8d44\u6e90\u5bf9\u8c61\u3002"),(0,l.kt)("p",null,"\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u4ece\u78c1\u76d8\u4e2d\u67e5\u8be2\u5230\uff0c\u7136\u540e\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue")," \u5bf9\u8c61\u8bbe\u7f6e\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueImpl::Fresh")," \u5e76\u4fdd\u5b58\u4e86\u5b9e\u9645\u7684\u8d44\u6e90\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Move\u865a\u62df\u673a\u4fdd\u5b58\u8d44\u6e90\uff1a")),(0,l.kt)("p",null,"\u867d\u7136\u5df2\u7ecf\u6267\u884c\u4e86 Move \u7684\u89e3\u91ca\u5668\u5df2\u7ecf\u6267\u884c\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"move_to()")," \u51fd\u6570\uff0c\u4f46\u76ee\u524d\u65b0\u7684\u8d44\u6e90\u8fd8\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u8fd8\u9700\u8981\u5728\u4ea4\u6613\u6267\u884c\u7ed3\u675f\u65f6\uff0c\u4fdd\u5b58\u5230\u78c1\u76d8\u3002"),(0,l.kt)("p",null,"\u5728\u6587\u4ef6 ",(0,l.kt)("inlineCode",{parentName:"p"},"sandbox/commands/run.rs")," \u6587\u4ef6\u4e2d\uff0c\u6709\u51fd\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"run():")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pub fn run() {\n    // \u8bfb\u53d6\u5b57\u8282\u7801\u6587\u4ef6\n    let bytecode = if is_bytecode_file(script_path) {...};\n\n    // \u521b\u5efa\u9700\u8981\u4f20\u9012\u7ed9 Move VM \u7684\u53c2\u6570\n    let vm_args: Vec<Vec<u8>> = convert_txn_args(txn_args);\n\n    // \u521b\u5efa Move VM \u5b9e\u4f8b\n    let vm = MoveVM::new(natives).unwrap();\n\n    // \u4f20\u5165\u72b6\u6001\u5b58\u50a8\u5bf9\u8c61\uff0c\u521b\u5efa Move VM \u4f1a\u8bdd\n    let mut session: Session<OnDiskStateView> = vm.new_session(state);\n\n    // \u6267\u884c Move \u811a\u672c\n    session.execute_script(\n        bytecode.to_vec(),\n        vm_type_args.clone(),\n        vm_args,\n        &mut gas_status,\n    );\n\n    // \u5b8c\u6210 Move VM \u7684\u6267\u884c\n    // \u62ff\u5230\u5185\u5b58\u4fdd\u5b58\u7684\u6240\u6709\u8d26\u6237\u4e0b\u7684 GlobalValue \u6570\u636e\u5bf9\u5e94\u7684\u4fee\u6539\u7c7b\u578b\n    // GlobalValueEffect::Deleted \u6216\u8005 GlobalValueEffect::Changed\n    // \u4ee5\u53ca\u4fee\u6539\u7c7b\u578b\u5bf9\u5e94\u7684\u6570\u636e\n    let (changeset, events) = session.finish().map_err(|e| e.into_vm_status())?;\n\n    // \u628a\u5185\u5b58 changeset \u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8\n    maybe_commit_effects(!dry_run, changeset, events, state)\n}\n")),(0,l.kt)("p",null,"\u5728 Move VM \u6267\u884c\u811a\u672c\u7684\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5728\u6700\u540e\u7684\u9636\u6bb5\uff0c\u4f1a\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"session.finish()")," \u628a\u5185\u5b58\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn finish(self) -> VMResult<(ChangeSet, Vec<Event>)> {\n    self.data_cache\n        .into_effects()\n        .map_err(|e| e.finish(Location::Undefined))\n}\n")),(0,l.kt)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"self.data_cache.into_effects()")," \u662f\u6700\u91cd\u8981\u7684\u51fd\u6570\uff0c\u6700\u7ec8\u8c03\u7528\u7684\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"TransactionDataCache")," \u7c7b\u578b\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"into_effects()")," \u51fd\u6570\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/move-vm/runtime/src/data_cache.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub(crate) fn into_effects(self) -> PartialVMResult<(ChangeSet, Vec<Event>)> {\n    // change_set \u7528\u4e8e\u4fdd\u5b58\u8d26\u6237\u5730\u5740\u5bf9\u5e94\u7684\u4fee\u6539\u96c6\u5217\u8868\n    let mut change_set = ChangeSet::new();\n\n    // \u5faa\u73af\u6240\u6709\u8d26\u6237\u7684\u8d26\u6237\u7f13\u5b58 AccountDataCache\n    for (addr, account_data_cache::AccountDataCache) in self.account_map.into_iter() {\n        let mut resources = BTreeMap::new();\n\n        // \u5faa\u73af\u5355\u4e2a\u8d26\u6237\u4e0b\u7f13\u5b58\u4e2d\u7684\u6240\u6709 GlobalValue\n        for (ty, (layout, gv::GlobalValue)) in account_data_cache.data_map {\n            // \u8c03\u7528 GlobalValue \u7684 into_effect() \u51fd\u6570\u8fd4\u56de GlobalValue \u5bf9\u5e94\u7684\u4fee\u6539\u7c7b\u578b\n            match gv.into_effect()? {\n                GlobalValueEffect::None => (), // \u4ec0\u4e48\u90fd\u4e0d\u505a\n                GlobalValueEffect::Deleted => {\n                    // \u6807\u8bb0\u4e3a\u5220\u9664\n                    resources.insert(struct_tag, None); // \u8d44\u6e90\u7c7b\u578b: None\n                }\n                GlobalValueEffect::Changed(val) => {\n                    // \u6807\u8bb0\u4e3a\u5df2\u88ab\u4fee\u6539\n                    let resource_blob = val\n                        .simple_serialize(&layout)\n                        .ok_or_else(|| PartialVMError::new(StatusCode::INTERNAL_TYPE_ERROR))?;\n                    resources.insert(struct_tag, Some(resource_blob)); // \u8d44\u6e90\u7c7b\u578b\uff1a\u4fee\u6539\u540e\u7684\u6570\u636e\n                }\n            }\n            // \u4e3a\u6bcf\u4e2a change_set \u5173\u8054\u8d26\u6237\u5730\u5740\n            change_set.publish_or_overwrite_account_change_set(\n                addr,\n                AccountChangeSet::from_modules_resources(modules, resources),\n            );\n        }\n    }\n\n    // \u8fd4\u56de change_set\n    Ok((change_set, events))\n}\n")),(0,l.kt)("p",null,"\u4e0a\u9762\u7684\u51fd\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"TransactionDataCache.into_effects()")," \u5faa\u73af\u6240\u6709\u8d26\u6237\u7684\u7f13\u5b58\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue"),"\uff0c\u5e76\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue.into_effects()"),"\uff0c\u76ee\u7684\u662f\u628a ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue")," \u5bf9\u5e94\u7684\u679a\u4e3e\u7c7b\u578b\uff0c\u53d8\u6210 ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueEffect")," \u5bf9\u5e94\u7684\u7c7b\u578b\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue.into_effects()")," \u51fd\u6570\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/move-vm/types/src/values/values_impl.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn into_effect(self) -> PartialVMResult<GlobalValueEffect<Value>> {\n    Ok(match self.0.into_effect()? {\n        GlobalValueEffect::None => GlobalValueEffect::None,\n        GlobalValueEffect::Deleted => GlobalValueEffect::Deleted,\n        GlobalValueEffect::Changed(v) => GlobalValueEffect::Changed(Value(v)),\n    })\n}\n")),(0,l.kt)("p",null,"\u6838\u5fc3\u7684\u51fd\u6570\u662f\u8fd9\u4e00\u884c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"self.0.into_effect()\n")),(0,l.kt)("p",null,"\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\uff0c\u5b9e\u9645\u8c03\u7528\u7684\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"ValueImpl.into_effects()")," \u51fd\u6570\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/move-vm/types/src/values/values_impl.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"fn into_effect(self) -> PartialVMResult<GlobalValueEffect<ValueImpl>> {\n    Ok(match self {\n        Self::None => GlobalValueEffect::None,\n        Self::Deleted => GlobalValueEffect::Deleted,\n        Self::Fresh { fields } => {\n            // \u65b0\u7684 GlobalValue \u7c7b\u578b\u6570\u636e\uff0c\u5373\u8be5\u8d26\u6237\u4e0b\u7b2c\u4e00\u6b21\u521b\u5efa\u5bf9\u5e94\u7c7b\u578b\u7684\u8d44\u6e90\n            GlobalValueEffect::Changed(ValueImpl::Container(Container::Struct(fields)))\n        }\n        Self::Cached { fields, status } => match &*status.borrow() {\n            GlobalDataStatus::Dirty => {\n                GlobalValueEffect::Changed(ValueImpl::Container(Container::Struct(fields)))\n            }\n            GlobalDataStatus::Clean => GlobalValueEffect::None,\n        },\n    })\n}\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue::Fresh")," \u7c7b\u578b\u7684\u679a\u4e3e\uff0c\u4f1a\u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValueEffech::Changed")," \u7c7b\u578b\u7684\u679a\u4e3e\uff0c\u5e76\u628a\u5b9e\u9645\u7684\u6570\u636e ",(0,l.kt)("inlineCode",{parentName:"p"},"fields")," \u4fdd\u5b58\u3002"),(0,l.kt)("p",null,"\u4e4b\u524d\u7684\u5185\u5bb9\u4e2d\u63d0\u5230\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"GlobalValue::Fresh")," \u4ee3\u8868\u8be5\u8d26\u6237\u4e0b\u7b2c\u4e00\u6b21\u521b\u5efa\u5bf9\u5e94\u7c7b\u578b\u7684\u8d44\u6e90\u3002\u3000"),(0,l.kt)("p",null,"\u5230\u8fd9\u91cc Move VM  \u6267\u884c\u8fc7\u7a0b\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"finish()")," \u51fd\u6570\u6267\u884c\u5b8c\u6bd5\uff0c\u62ff\u5230\u4e86\u6240\u6709\u7528\u6237\u7684\u8d44\u6e90\u7684\u4fee\u6539\u8bb0\u5f55\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"let (changeset, events) = session.finish().map_err(|e| e.into_vm_status())?;\n")),(0,l.kt)("p",null,"\u6700\u540e\u8981\u505a\u7684\uff0c\u5c31\u662f\u628a\u8fd9\u4e9b\u4fee\u6539\u8bb0\u5f55\u4fdd\u5b58\u5230\u78c1\u76d8\u4e2d\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"maybe_commit_effects(!dry_run, changeset, events, state)\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"maybe_commit_effects")," \u51fd\u6570\u5224\u65ad\uff0c\u53ea\u8981\u4e0d\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"dry_run"),"\uff0c\u5c31\u5faa\u73af\u4fee\u6539\u96c6\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u628a\u5b83\u5199\u5165\u5230\u78c1\u76d8\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/tools/move-cli/src/sandbox/utils/mod.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub(crate) fn maybe_commit_effects(\n    commit: bool,\n    changeset: ChangeSet,\n    events: Vec<Event>,\n    state: &OnDiskStateView,\n) -> Result<()> {\n    if commit {\n        for (addr, account) in changeset.into_inner() {\n            for (struct_tag, blob_opt) in account.into_resources() {\n                match blob_opt {\n                    Some(blob) => state.save_resource(addr, struct_tag, &blob)?,\n                    None => state.delete_resource(addr, struct_tag)?,\n                }\n            }\n        }\n\n        for (event_key, event_sequence_number, event_type, event_data) in events {\n            state.save_event(&event_key, event_sequence_number, event_type, event_data)?\n        }\n    }\n\n    Ok(())\n}\n")),(0,l.kt)("p",null,"\u5982\u679c\u4fee\u6539\u96c6\u5b58\u5728\u8981\u6570\u636e\uff0c\u8bf4\u660e\u8981\u4fdd\u5b58\u6700\u65b0\u7684\u6570\u636e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"Some(blob) => state.save_resource(addr, struct_tag, &blob)\n")),(0,l.kt)("p",null,"\u5982\u679c\u4fee\u6539\u96c6\u4e3a\u7a7a\uff0c\u8bf4\u660e\u8981\u5220\u9664\u6570\u636e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"None => state.delete_resource(addr, struct_tag)\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"save_resource()"),"  \u51fd\u6570\u4fdd\u5b58\u6570\u636e\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/tools/move-cli/src/sandbox/utils/on_disk_state_view.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn save_resource(&self, addr: AccountAddress, tag: StructTag, bcs_bytes: &[u8]) -> Result<()> {\n    let path = self.get_resource_path(addr, tag);\n    if !path.exists() {\n        fs::create_dir_all(path.parent().unwrap())?;\n    }\n    Ok(fs::write(path, bcs_bytes)?)\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"delete_resource()")," \u51fd\u6570\u5220\u9664\u6570\u636e\uff1a"),(0,l.kt)("p",null,"\u6587\u4ef6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"language/tools/move-cli/src/sandbox/utils/on_disk_state_view.rs")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn delete_resource(&self, addr: AccountAddress, tag: StructTag) -> Result<()> {\n    let path = self.get_resource_path(addr, tag);\n    fs::remove_file(path)?;\n\n    // delete addr directory if this address is now empty\n    let addr_path = self.get_addr_path(&addr);\n    if addr_path.read_dir()?.next().is_none() {\n        fs::remove_dir(addr_path)?\n    }\n    Ok(())\n}\n")),(0,l.kt)("p",null,"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5728\u67d0\u4e2a\u8d26\u6237\u4e0b\u521b\u5efa\u8d44\u6e90\u7684\u6e90\u7801\u5206\u6790\u5b8c\u6bd5\u3002"))}c.isMDXComponent=!0}}]);